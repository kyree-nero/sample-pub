<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>scratch</groupId>
	<artifactId>web-sample-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
		<jdk.version>1.8</jdk.version>
		<spring.core.version>4.3.5.RELEASE</spring.core.version>
		<spring.security.version>4.2.2.RELEASE</spring.security.version>
		<hibernate.core.version>5.2.10.Final</hibernate.core.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-core</artifactId>
	        <version>${hibernate.core.version}</version>
	    </dependency>
			<dependency>
			    <groupId>org.springframework.data</groupId>
			    <artifactId>spring-data-jpa</artifactId>
			    <version>1.11.0.RELEASE</version>
			</dependency>
			<dependency>
			    <groupId>org.hibernate.javax.persistence</groupId>
			    <artifactId>hibernate-jpa-2.1-api</artifactId>
			    <version>1.0.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.btm</groupId>
			    <artifactId>btm</artifactId>
			    <version>2.1.3</version>
			</dependency>
			<dependency>
			    <groupId>com.h2database</groupId>
			    <artifactId>h2</artifactId>
			    <version>1.4.193</version>
			</dependency>
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
			    <version>2.5.0</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-framework-bom</artifactId>
	            <version>${spring.core.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-beans</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-expression</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-context</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-core</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-orm</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-aop</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-jdbc</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-transaction</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-webmvc</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-test</artifactId> -->
<!-- 				<version>${spring.core.version}</version> -->
<!-- 			</dependency> -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.7</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
			</dependency>
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>2.4.0</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.15</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						
						<configuration>
							<threadCount>1</threadCount>
							
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<!-- The Executions required by unit tests are omitted. -->
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>
	<modules>
		<module>web-sample-application</module>
		<module>web-sample-persistence</module>
		<module>web-sample-services</module>
		<module>web-sample-webmvc</module>
		<module>web-sample-test</module>
		<module>web-sample-webfilters</module>
	</modules>
</project>